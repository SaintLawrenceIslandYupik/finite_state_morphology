#!/usr/bin/env foma -f

read lexc exceptions.lexc
define Exceptions

read lexc parallel.lexc
define ParallelForms

read lexc ess.lexc
define Lexicon


!==============
! MISC SYMBOLS
!==============
! "^"    morpheme boundary
! .#.    word boundary
! %{g%} h  weak gh


!======
! SETS
!======

define C          [ f | g | h | k | l | m |
                    n | p | q | r | s | t |
                    v | w | y | z |
                    %{t%} | %{g%} | %{k%} ];

define Stop       [ p   | t   | k   | q   |
                    k w | q w ];

define VoicedC    [ g h w | g h |
                    v | l | z   | y | r | g | w |
                    m | n | n g | n g w ];

define UnvoicedC  [ p   | t   | k   | q   |
                    k w | q w |
                    f   | s   | h   |
                    l l | r r | g g | w h | g h h | g h h w |
                    m m | n n | n g n g   | n g n g w ];

define MultiCharC [ n g n g w |
                    n g n g   | g h h w | g h h |
                    g h w     | n g w   |
                    g g       | g h     | k w   | l l | m m |
                    n g       | n n     | r r   | q w | w h ];

define FullVowel  [ a | i | u ]     ;
define V          [ e | FullVowel ];

define Allomorph  [ %{E%} | %{I%} | %{GI%} | %{AI%} ];


!=======
! RULES
!=======

define Lowercase [ A:a | I:i | U:u | E:e |
                   P:p | T:t | K:k | Q:q |
				   L:l | Z:z | Y:y | R:r |
				   G:g | W:w | S:s | F:f |
				   S:s | M:m | N:n | "V":v ] ?* | ?* ;

define Uppercase [ a:A | i:I | u:U | e:E |
                   p:P | t:T | k:K | q:Q |
				   l:L | z:Z | y:Y | r:R |
				   g:G | w:W | s:S | f:F |
				   s:S | m:M | n:N | v:"V" ] ?* | ?* ;

!------------------------------
! E-DROPPING AND HOPPING RULES
!------------------------------

define FinalE %{%.f%.%} -> 0 || [ C C & ~MultiCharC & ~[h h] ] e "^" _ [ MultiCharC | C ] .o. ! do not hop or drop final e if doing so results
                                                                                                ! in a cluster of three consonants e.g.
                                                                                                ! riigte[Abl.Mod][Sg] -> riigtmeng
                                                                                                ! [Jacobson (2001) p.21]
                                                                                                ! ~[h h] for puughhe(V)^@~fnaqe(V→V) [Badten (2008) p.657]
                  [..] -> e || .#. ( MultiCharC | C ) FullVowel _ C e "^" %{%.f%.%}         .o. ! hop final -e
                     e -> 0 ||    [ ? - .#.] [ MultiCharC | C ] _ "^" %{%.f%.%}             .o. ! drop final -e as long it isn't in the first syllable
               %{%.f%.%} -> 0                                                               ;


define SemiFinalE %{%.sf%.%} -> 0 || [ (C) C C & ~MultiCharC ] e g (h) "^" _                                           .o.
                        [..] -> e ||      .#. ( MultiCharC | C ) FullVowel _ [ MultiCharC | C ] e g (h) "^" %{%.sf%.%} .o.
                           e -> 0 ||        [ ? - .#. ] [ MultiCharC | C ] _ g (h) "^" %{%.sf%.%}                      .o.
                  %{%.sf%.%} -> 0                                                                                      ;


define ShortRootFinalE e -> a || .#. C (C) V C (C) _ "^" %{%.fS%.%} .o. ! [Jacobson (2001) p.38]
              %{%.fS%.%} -> %{%.f%.%}                               ;


define LongRootFinalE e -> 0 || _ "^" %{%.fL%.%} .o. ! drop final -e but do not hop if root exceeds two syllables
             %{%.fL%.%} -> 0                     ;   ! [Jacobson (2001) p.32]


!-------------------------
! CONSONANT-RELATED RULES
!-------------------------

define DropFinalC g h h -> w h   || %{k%} w         "^" %{%.m%.%} _ [ ? - .#. ]       .o. ! assimilate ghh- onset to dropped -w
                  g h h -> g g   || g               "^" %{%.m%.%} _ [ ? - .#. ]       .o. ! Intr.Opt.Fut [Jacobson (2001) p.119]
                    g h -> g     || g               "^" %{%.m%.%} _ [ ? - .#. ]       .o. ! assimilate gh- onset to dropped -g
                    g h -> g h w || g h w           "^" %{%.m%.%} _ [ ? - .#. ]       .o. ! assimilate gh- onset to dropped -ghw
                    g h -> w h   || %{k%} w         "^" %{%.m%.%} _ UnvoicedC         .o. ! assimilate gh- onset to dropped -w
                    g h -> w     || %{k%} w         "^" %{%.m%.%} _ VoicedC           .o. ! assimilate gh- onset to dropped -w
                      g -> g h   || [ g | %{g%} ] h "^" %{%.m%.%} _ [ V | C - g - h ] .o. ! assimilate g-  onset to dropped -gh
                      k -> q w   || g h w           "^" %{%.m%.%} _ [ ? - .#. ]       .o. ! assimilate k-  onset to dropped -ghw
                      k -> q     || [ g | %{g%} ] h "^" %{%.m%.%} _ [ ? - .#. ]       .o. ! assimilate k-  onset to dropped -gh
                      k -> k w   || w               "^" %{%.m%.%} _ [ ? - .#. ]       .o. ! assimilate k-  onset to dropped -w
					  q -> k     || g               "^" %{%.m%.%} _ [ ? - .#. ]       .o. ! assimilate q-  onset to dropped -g
                    g g -> g h h ||             g h "^" %{%.m%.%} _                   .o. ! assimilate gg- onset to dropped -gh [Jacobson (2001) p.66]
    [ ~MultiCharC & C ] -> 0     ||                               _ "^" %{%.m%.%}     .o. ! drop root-final consonant
    [ g | %{g%} ] ( h ) -> 0     ||                               _ "^" %{%.m%.%}     .o. ! drop -g in root-final -gh, -gh in -ghw
              %{%.m%.%} -> 0                                                          ;


define DropWeakC %{g%} h -> 0 || _ "^" %{%.w%.%} .o. ! drop weak -gh from the root
               %{%.w%.%} -> 0                    ;


define DropUvular %{g%} h -> 0   || C FullVowel _ "^" %{%.c%.%} [ FullVowel | Allomorph ] .o. ! drop uvular -gh between two single vowels
                      g h -> 0   || C FullVowel _ "^" %{%.c%.%} [ FullVowel | Allomorph ] .o. ! where the second vowel can be a full vowel
                %{%.c%.%} -> 0                                                            ;   ! or an allomorph
 

define VelarUvularRounding       g -> w         || [ i | a ] u _ [ C | V - u ] .o. ! velar/uvular rounding [Jacobson (2001) p.30]
                                                                                   ! unclear if this affects other phonemes besides -g
                           n g n g -> n g n g w || [ C | V - u ] _ u [ i | a ] .o. ! velar/uvular rounding [Jacobson (2001) p.36-37]
                               n g -> n g w     || [ C | V - u ] _ u [ i | a ] .o. ! needs to occur before vowel dominance
                             g h h -> g h h w   || [ C | V - u ] _ u [ i | a ] .o.
                               g h -> g h w     || [ C | V - u ] _ u [ i | a ] .o.
                               g g -> w h       || [ C | V - u ] _ u [ i | a ] .o.
                                 k -> k w       || [ C | V - u ] _ u [ i | a ] .o.
                                 g -> w         || [ C | V - u ] _ u [ i | a ] .o.
                                 q -> q w       || [ C | V - u ] _ u [ i | a ];


define DropFinalVC V (C) (h) -> 0 || _ "^" %{%.mm%.%} .o. 
                  %{%.mm%.%} -> 0                     ;


!---------------------------------------
! OTHER / MISC MORPHOPHONOLOGICAL RULES
!---------------------------------------

define VowelDominance a i -> i i  .o.
                      i a -> i i  .o.
                      u i -> i i  .o.
                      i u -> i i  .o.
                      a u -> a a  .o.
                      u a -> a a  .o.
                      i e -> i i  .o. ! e-hopping
                      a e -> a a  .o.
                      u e -> u u  ;


define DeleteEBeforeVowel e -> 0 || _ "^" a .o. ! [Intr][Intrg][1Pl]:%^ste%^a -> %^st%^a
                          e -> 0 || _ "^" i .o. ! [Intr][Opt][2Pl/Du] drop final -e, e.g. aanitek but there is no ~f in these morphemes
                          e -> 0 || _ "^" u ;   ! [Intr][Opt][1Du]:%^ste%u -> %^st%^u


define DropMiddleVowel a -> 0 || V _ V ; ! occurs something with the transitive indicative [Jacobson (2001) p.44]


!-------------------
! ALLOMORPHY RULES
!-------------------

define AddE %{E%} -> a || a "^" _ .o.
            %{E%} -> i || i "^" _ .o.
            %{E%} -> u || u "^" _ .o.
            %{E%} -> e || C "^" _ .o.
            %{E%} -> 0            ;


define ResolveG %{G%} -> g || FullVowel ("^") FullVowel "^" _     .o.
                %{G%} -> 0                                        ;


define ResolveI %{I%} -> e ||       g h "^" _ .o. ! for derivational suffix ~sf:(e)sqe [Jacobson (2001) p.64]
                %{I%} -> i || FullVowel "^" _ .o.
                %{I%} -> e || m "^" _         .o. ! for obsolete verb root -ete [Jacobson (2001) p.78]
                %{I%} -> i || n "^" _         .o.
                %{I%} -> 0                    ;


define OptativeAllomorphs %{GI%} -> g i   || FullVowel ("^") FullVowel "^" _ .o. ! -a, -i, -u vs. -aa, -ii, -uu [Jacobson (2001) p.65]
                          %{GI%} -> 0                                        .o.
                          %{AI%} -> i     ||                       g h "^" _ .o. ! -agh, -igh, -ugh vs. -aagh, -iigh, -uugh [Jacobson (2001) p.65]
                          %{AI%} -> a     ||                 FullVowel "^" _ ;


define SFGKeKa e -> a || "^" ( %{%.at%.%} | %{%.sf%.%} | %{%.m%.%} | g ) [ k | q ] _ "^" n g   ; ! @~sf–(g)ke/ka [Jacobson (2001) p.72]
!            [..] -> g || "^" ( %{%.at%.%} | %{%.sf%.%} | %{%.m%.%} | g ) [ k | q ] e "^" _ k a ;   ! @~sf–(g)ke/ka [Badten (2008) p.617]


define Uteta e -> a || "^" [ %{%.at%.%} | %{%.sf%.%} | %{%.f%.%} | %{%.c%.%} ] u %{t%} _ "^" [ %{%.f%.%} | %{%.fS%.%} ] n g .o. ! @~:(u)te [Jacobson (2001) p.116]
             e -> a || "^"                                                       %{t%} _ "^" [ %{%.f%.%} | %{%.fS%.%} ] n g ;


! what is %{SUBR%}?
!   in the context of the subordinative mood, derivational suffixes @–nghite and ~:(ng)ite rewrite as –gpe and ~f–ngu, respectively.
!   the subordinative mood marker is also +na for these strongly special -te roots, hence a placeholder %{SUBR%}, while the ordinary
!   subordinative mood marker @~flu (or @~fllu) is used with all other special -te roots. lastly, some of the person/number markers
!   are also different for strongly special -te roots, using the subordinative mood marker +na [Jacobson (2001) p.102].
! there's probably a better way to write this tbh, especially the "t e n ^" -> "n g". how do we differentiate "ten" versus "teng"?

define RewriteSubordinative %{%.sf%.%} i %{t%} e "*" "*" "^" %{SUBR%} "^" k u       -> %{%.m%.%} n g u "^" n a "^" a n         .o. 
                            %{%.sf%.%} i %{t%} e "*" "*" "^" %{SUBR%} "^" t e n "^" -> %{%.m%.%} n g u "^" n a "^" n g         .o. 
                            %{%.sf%.%} i %{t%} e "*" "*" "^" %{SUBR%} "^" t a       -> %{%.m%.%} n g u "^" n a "^" a m t a     .o. 
                            %{%.sf%.%} i %{t%} e "*" "*" "^" %{SUBR%} "^" t u n g   -> %{%.m%.%} n g u "^" n a "^" a m t u n g .o. 
                            %{%.sf%.%} i %{t%} e "*" "*" "^" %{SUBR%} "^"           -> %{%.m%.%} n g u "^" n a                 .o.
                         %{%.f%.%} n g i %{t%} e "*" "*" "^" %{SUBR%} "^" k u       -> %{%.f%.%} n g u "^" n a "^" a n         .o. 
                         %{%.f%.%} n g i %{t%} e "*" "*" "^" %{SUBR%} "^" t e n "^" -> %{%.f%.%} n g u "^" n a "^" n g         .o. 
                         %{%.f%.%} n g i %{t%} e "*" "*" "^" %{SUBR%} "^" t a       -> %{%.f%.%} n g u "^" n a "^" a m t a     .o. 
                         %{%.f%.%} n g i %{t%} e "*" "*" "^" %{SUBR%} "^" t u n g   -> %{%.f%.%} n g u "^" n a "^" a m t u n g .o. 
                         %{%.f%.%} n g i %{t%} e "*" "*" "^" %{SUBR%} "^"           -> %{%.f%.%} n g u "^" n a                 .o.
                             %{%.c%.%} i %{t%} e "*" "*" "^" %{SUBR%} "^" k u       -> %{%.m%.%} n g u "^" n a "^" a n         .o. 
                             %{%.c%.%} i %{t%} e "*" "*" "^" %{SUBR%} "^" t e n "^" -> %{%.m%.%} n g u "^" n a "^" n g         .o. 
                             %{%.c%.%} i %{t%} e "*" "*" "^" %{SUBR%} "^" t a       -> %{%.m%.%} n g u "^" n a "^" a m t a     .o. 
                             %{%.c%.%} i %{t%} e "*" "*" "^" %{SUBR%} "^" t u n g   -> %{%.m%.%} n g u "^" n a "^" a m t u n g .o. 
                             %{%.c%.%} i %{t%} e "*" "*" "^" %{SUBR%} "^"           -> %{%.m%.%} n g u "^" n a                 .o.
                               "^" i %{t%} e "*" "*" "^" %{SUBR%} "^" k u       -> "^" %{%.m%.%} n g u "^" n a "^" a n         .o. 
                               "^" i %{t%} e "*" "*" "^" %{SUBR%} "^" t e n "^" -> "^" %{%.m%.%} n g u "^" n a "^" n g         .o. 
                               "^" i %{t%} e "*" "*" "^" %{SUBR%} "^" t a       -> "^" %{%.m%.%} n g u "^" n a "^" a m t a     .o. 
                               "^" i %{t%} e "*" "*" "^" %{SUBR%} "^" t u n g   -> "^" %{%.m%.%} n g u "^" n a "^" a m t u n g .o. 
                               "^" i %{t%} e "*" "*" "^" %{SUBR%} "^"           -> "^" %{%.m%.%} n g u "^" n a                 .o.
                                   n g i %{t%} e "*" "*" "^" %{SUBR%} "^" k u       ->           n g u "^" n a "^" a n         .o. 
                                   n g i %{t%} e "*" "*" "^" %{SUBR%} "^" t e n "^" ->           n g u "^" n a "^" n g         .o. 
                                   n g i %{t%} e "*" "*" "^" %{SUBR%} "^" t a       ->           n g u "^" n a "^" a m t a     .o. 
                                   n g i %{t%} e "*" "*" "^" %{SUBR%} "^" t u n g   ->           n g u "^" n a "^" a m t u n g .o. 
                                   n g i %{t%} e "*" "*" "^" %{SUBR%} "^"           ->           n g u "^" n a                 .o. 
                      %{%.at%.%} n g h i %{t%} e "*" "*" "^" %{SUBR%} "^" k u       -> %{%.m%.%} g p e "^" n a "^" a n         .o.
                      %{%.at%.%} n g h i %{t%} e "*" "*" "^" %{SUBR%} "^" t e n "^" -> %{%.m%.%} g p e "^" n a "^" n g         .o.
                      %{%.at%.%} n g h i %{t%} e "*" "*" "^" %{SUBR%} "^" t a       -> %{%.m%.%} g p e "^" n a "^" a m t a     .o.
                      %{%.at%.%} n g h i %{t%} e "*" "*" "^" %{SUBR%} "^" t u n g   -> %{%.m%.%} g p e "^" n a "^" a m t u n g .o.
                      %{%.at%.%} n g h i %{t%} e "*" "*" "^" %{SUBR%} "^"           -> %{%.m%.%} g p e "^" n a                 .o.
                    %{%.at%.%} n e g h i %{t%} e "*" "*" "^" %{SUBR%} "^" k u       -> %{%.m%.%} g p e "^" n a "^" a n         .o.
                    %{%.at%.%} n e g h i %{t%} e "*" "*" "^" %{SUBR%} "^" t e n "^" -> %{%.m%.%} g p e "^" n a "^" n g         .o.
                    %{%.at%.%} n e g h i %{t%} e "*" "*" "^" %{SUBR%} "^" t a       -> %{%.m%.%} g p e "^" n a "^" a m t a     .o.
                    %{%.at%.%} n e g h i %{t%} e "*" "*" "^" %{SUBR%} "^" t u n g   -> %{%.m%.%} g p e "^" n a "^" a m t u n g .o.
                    %{%.at%.%} n e g h i %{t%} e "*" "*" "^" %{SUBR%} "^"           -> %{%.m%.%} g p e "^" n a                 .o.
                       %{%.m%.%} n g h i %{t%} e "*" "*" "^" %{SUBR%} "^" k u       -> %{%.m%.%} g p e "^" n a "^" a n         .o.
                       %{%.m%.%} n g h i %{t%} e "*" "*" "^" %{SUBR%} "^" t e n "^" -> %{%.m%.%} g p e "^" n a "^" n g         .o.
                       %{%.m%.%} n g h i %{t%} e "*" "*" "^" %{SUBR%} "^" t a       -> %{%.m%.%} g p e "^" n a "^" a m t a     .o.
                       %{%.m%.%} n g h i %{t%} e "*" "*" "^" %{SUBR%} "^" t u n g   -> %{%.m%.%} g p e "^" n a "^" a m t u n g .o.
                       %{%.m%.%} n g h i %{t%} e "*" "*" "^" %{SUBR%} "^"           -> %{%.m%.%} g p e "^" n a                 .o.
                                 n g h i %{t%} e "*" "*" "^" %{SUBR%} "^" k u       -> %{%.m%.%} g p e "^" n a "^" a n         .o.
                                 n g h i %{t%} e "*" "*" "^" %{SUBR%} "^" t e n "^" -> %{%.m%.%} g p e "^" n a "^" n g         .o.
                                 n g h i %{t%} e "*" "*" "^" %{SUBR%} "^" t a       -> %{%.m%.%} g p e "^" n a "^" a m t a     .o.
                                 n g h i %{t%} e "*" "*" "^" %{SUBR%} "^" t u n g   -> %{%.m%.%} g p e "^" n a "^" a m t u n g .o.
                                 n g h i %{t%} e "*" "*" "^" %{SUBR%} "^"           -> %{%.m%.%} g p e "^" n a                 .o.
                                                                         %{SUBR%}   -> %{%.at%.%} %{%.f%.%} l u                ,,
                                                                         %{SUBR%}   -> %{%.at%.%} %{%.f%.%} l l u              ;


!------------------
! MODIFY -TE RULES
!------------------

! what is %{K%}?
!  the conditional mood marker is @~sf–(g)k which is nearly identical to the derivational morpheme @~sf–(g)ka/ke.
!  all special -te becomes -l and only -l before the derivational morpheme @~sf–ka/ke [Jacobson (2001) p.72],
!  but some special -te (weakly special -te) become -l, -s, or -t before the conditional mood marker [p.92].
!  we introduce %{K%} in the conditional mood marker to differentiate these environments -> @~sf–(g)%{K%}

define SpecialTE %{t%} e ("*") "*" -> l ||         _ "^" %{%.at%.%}           ,,  ! special -te always changes to -l
                                 e -> 0 || V %{t%} _ "*" "^" %{%.at%.%} %{K%} .o. ! but in the conditional mood,
                         %{t%} "*" -> t                                       ,   !   weakly special -te can also 
                         %{t%} "*" -> s ||       V _ "*" "^" %{%.at%.%} %{K%} .o. !   change to -t or -s
                             %{K%} -> k                                       ;


define UnmarkSpecialTE "*" -> 0 ;


define ISuffixTE e -> 0 || %{t%} _ "^" %{%.at%.%} i .o.
             %{t%} -> s ||       _ "^" %{%.at%.%} i ;


define LabialTE e   -> 0     || V %{t%} _ "^" %{%.at%.%} [ m | v ]  .o. ! labial -m and -v 
                n   -> n n   ||         _ %{t%} e "^" %{%.at%.%} m  .o. !   deletes -e if -Vte
                l   -> l l   ||         _ %{t%} e "^" %{%.at%.%} m  .o. !   deletes -te if -Cte
                g h -> g h h ||         _ %{t%} e "^" %{%.at%.%} m  .o. !   and the resulting
                  v -> f     ||         C %{t%} e "^" %{%.at%.%} _  .o. !   consonant cluster devoices
            %{t%} e -> 0     ||       C _         "^" %{%.at%.%} m  ;   ! [Jacobson (2001) p.177]


define ApicalTE y   -> s                                                 ,   ! apical -y [Jacobson (2001) p.177]
                n   -> n n                                               ,   ! apical -n and -r [Jacobson (2001) p.31 & p.90]
                r   -> r r     || %{t%} e "^" %{%.at%.%} _               .o. !   the only consonants before -te that double
                g   -> g g                                               ,   !   to show voicelessness are -g, -l, -gh
                l   -> l l                                               ,
                g h -> g h h   || _ %{t%} e "^" %{%.at%.%} [ n | r ]     .o.
                l   -> l l     || %{t%} e "^" %{%.at%.%} _ [ V | C - l ] .o. ! apical -l [Jacobson (2001) p.70]
                g h -> e g h h || C %{t%} e "^" %{%.at%.%} l l _         .o. ! for postbase @–lghii
			   [..] -> e       || %{t%} e "^" %{%.at%.%} n n _ g h h     .o. ! for postbase @–nghhagh(V>N)
			   [..] -> e       || C %{t%} e "^" %{%.at%.%} n n _ q         ;   ! for postbase @–nqigte(V>V)


define VelarTE %{t%} e -> 0  ||               _ "^" %{%.at%.%} k a g h a %{g%} h .o. ! postbase @kaghaq(N>N)
                     e -> 0  ||       V %{t%} _ "^" %{%.at%.%} k                 .o. ! [Jacobson (2001) p.177]
                 %{t%} -> t,
                 %{t%} -> s  ||             V _ "^" %{%.at%.%} k                 .o. ! e.g. tuqutkuvgu, tuquskuvgu
            %{%.at%.%} -> 0  || C %{t%} e "^" _ k                                ;   ! e.g. qelpeghtekuvgu


define DropTE %{t%} e -> 0 || _ "^" %{%.at%.%} .o.
            %{%.at%.%} -> 0                    ;


!----------------
! CLEAN-UP RULES
!----------------

define MatchVoicing t [z | y] -> s                                   .o. ! tz / ty = s
                            y -> s ||            _ [ k | q | g h h ] .o. ! [Jacobson (2001) p.66] e.g. paasghu
                            y -> s ||  [ k | q ] _                   .o.
                            z -> s || Stop ("^") _                   .o. ! [Jacobson (2001) p.51] e.g. qiyaaqsin
                            k -> q ||        g h _                   .o.
                          g h -> 0 ||          C _ q                 .o. ! e.g. itegh[Intr][Cond][3Sg]:iitghqan -> iitqan
                            v -> f || _ ("^") Stop                   .o. ! [Jacobson (2001) p.58] e.g. kuufkaq
                            v -> f || [ k | t ] _                    ;


define BaseFinalEndings %{t%} e -> n   ||               V _     "^" .#. , 
                        %{t%} e -> t a                                  .o.
                              e -> a   ||                 _     "^" .#. .o.
                              w -> k w || [C - h | %{k%}] _     "^" .#. .o.
                            g h -> q   ||                 _ (w) "^" .#. .o.
                        %{g%} h -> q   ||                 _     "^" .#. .o.
                              g -> k   ||                 _     "^" .#. .o.
          [ %{t%} | t ] ("^") z -> s                                    ; ! [Jacobson (2001) p.51] e.g. ~f(t)zin


define PreventGemination n -> 0 || .#. a a _ "^" n   .o. ! aane+naqe [Jacobson (2001) p.31]
                         n -> 0 || .#. t u u _ "^" n ;   ! tuune+naqutke [Badten (2008) p.650]


define CleanupDigraph %{k%}   -> 0   .o.
                      %{g%} h -> g h .o.
                      %{t%}   -> t   ;


define AssimilateEnclitic g h -> q || _ ("^") "^" l l u   .#. .o. ! ("^") since [Abs][Sg]+{encl} maps to ^^{encl}
                          n g -> 0                            ,   ! [Jacobson (2001) p.91]
                          l l -> l                            ,   ! [Badten (2008) Appendix p.705]
                            t -> n                            ,
                            k -> g || _ ("^") "^" n g u q .#. .o.
                          g h -> q || _ ("^") "^" s a     .#. .o.
                            t -> s || _ ("^") "^" t a     .#. ;


define CleanupMorphBoundary "^" -> 0 ;


define Undoubling l l -> l, r r -> r, g g -> g, g h h -> g h, g h h w -> g h w || _ [ Stop | f |  s]                      .o.
                  l l -> l, r r -> r, g g -> g, g h h -> g h, g h h w -> g h w || [ Stop | f | s | [C - g - w] h ] _ .o.
                  l l -> l, r r -> r, g g -> g, g h h -> g h, g h h w -> g h w || _ l l                                   .o.
                  l l -> l, r r -> r, g g -> g, g h h -> g h, g h h w -> g h w || [ l l | r r | g g | g h h | g h h w ] _ .o.
                  m m -> m, n n -> n, n g n g -> n g, n g n g w -> n g w       || [ Stop | f | s | [C - g - w] h ] _      .o.
                  m m -> m, n n -> n, n g n g -> n g, n g n g w -> n g w       || [ l l | r r | g g | g h h | g h h w ] _ ;


!==============
! RULE CASCADE
!==============

define Rules [
    !------------------------------
    ! lexical string rewrite
    !------------------------------
    RewriteSubordinative .o.
    SFGKeKa              .o.
    Uteta                .o.
    !-------------------------------
    ! modify -te rules
    !-------------------------------
    SpecialTE            .o.
    UnmarkSpecialTE      .o.
    ISuffixTE            .o.
    LabialTE             .o.
    ApicalTE             .o.
    VelarTE              .o.
    DropTE               .o.
    !-------------------------------
    ! -e dropping and hopping rules
    !-------------------------------
    SemiFinalE           .o.
    ShortRootFinalE      .o.
    LongRootFinalE       .o.
    FinalE               .o.
    !-------------------------------
    ! consonant-related rules
    !-------------------------------
    DropFinalVC          .o.
    DropFinalC           .o.
    DropWeakC            .o.
    DropUvular           .o.
    !-------------------------------
    ! allomorphy rules
    !-------------------------------
    AddE                 .o.
    DeleteEBeforeVowel   .o.
    ResolveG             .o.
    ResolveI             .o.
    OptativeAllomorphs   .o.
    !-------------------------------
    ! clean up
    !-------------------------------
    BaseFinalEndings     .o.
    PreventGemination    .o.
    CleanupDigraph       .o.
    AssimilateEnclitic   .o.
    CleanupMorphBoundary .o.
    VelarUvularRounding  .o.
    DropMiddleVowel      .o.
    VowelDominance       .o.
    MatchVoicing         .o.
    Undoubling
];

define GrammarLower [ [Exceptions .o. Rules] .P. [ [Lexicon .o. Rules] | [ParallelForms .o. Rules] ] ];
define GrammarUpper [ [Exceptions .o. Rules .o. Uppercase] .P. [ [Lexicon .o. Rules .o. Uppercase] | [ParallelForms .o. Rules .o. Uppercase] ] ];
