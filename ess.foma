#!/usr/bin/env foma -f

read lexc exceptions.lexc
define Exceptions
!eliminate flag VALENCE
!define ExceptionsNoFlags;
!define Exceptions ExceptionsNoFlags;

read lexc ess.lexc
define Lexicon
!eliminate flag VALENCE
!define LexiconNoFlags;
!define Lexicon LexiconNoFlags;


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!                                       !!!
!!!      Phoneme/Grapheme Definition      !!!
!!!                                       !!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

define WordBoundary [ .#. ];
define MorphemeBoundary "^";

define Stop               [  p   |   t                 |  k     | "kw"   |  q    | "qw"       ];
define VoicedFricative    [  v   |   l  | z | y |  r   |  g     |  w     | "gh"  | "ghw"      ];
define VoicelessFricative [  f   | "ll" |   s   | "rr" | "gg"   | "wh"   | "ghh" | "ghhw" | h ];
define VoicedNasal        [  m   |   n                 | "ng"   | "ngw"                       ];
define VoicelessNasal     [ "mm" | "nn"                | "ngng" | "ngngw"                     ];

define VoicedC    [ VoicedFricative | VoicedNasal ];
define VoicelessC [ VoicelessFricative | VoicelessNasal | Stop ];

define Fricative  [ VoicelessFricative | VoicedFricative ];
define Nasal      [ VoicelessNasal     | VoicedNasal     ];

define C          [ Stop | Fricative | Nasal ];

define FullVowel   [ a   | i   | u   ];
define DoubleVowel [ a a | i i | u u ];
define V           [ e | FullVowel ];

define Enclitic   [ ll u | ng u q ];

define Alphabet [ C | V | "*" | "'" | "-" ];
define MorphPhonSymbols [ "~"     | "~f"    | "~sf"   | "~h"    | "-w"    | ":"     | "–"     | "––" |
                          "@*"    | "@₁"    | "@₂"    |
                          "(e)"   | "(g)"   | "(ng₁)" | "(ng₂)" | "(t)"   | "(te)"  | "(i₁)"  | "(i₂)" | "(u)" | "(a)" | "(s)"   | "(at)"  |
						  "(g/t)" | "(p/v)" | "(s/z)" | "(t/y)" | "(i/u)" | "(q/t)" | "(pete)fte" | "@~–(g)ka" | "@~–(g)ke" |
                          "~f-w/-w" | "~sf-w:(e)tgun/teggun" | "@₁–lghii/@*ngugh*" | "@₁~fy/~f(ng₁)" | "@₁~flu/na" | "[Cond]" ];

define Lowercase "A"    -> a,
                 "I"    -> i,
                 "U"    -> u,
                 "E"    -> e,
                 "H"    -> h,
                 "P"    -> p,
                 "T"    -> t,
                 "K"    -> k,
                 "Kw"   -> k,
                 "Q"    -> q,
                 "Qw"   -> q,
                 "V"    -> v,
                 "L"    -> l,
                 "Z"    -> z,
                 "Y"    -> y, 
                 "R"    -> r,
                 "G"    -> g,
                 "W"    -> w,
                 "Gh"   -> gh,
                 "Ghw"  -> ghw,
                 "F"    -> f,
                 "Ll"   -> ll,
                 "S"    -> s,
                 "Rr"   -> rr,
                 "Gg"   -> gg,
                 "Wh"   -> wh,
                 "Ghh"  -> ghh,
                 "Ghhw" -> ghhw,
                 "M"    -> m,
                 "N"    -> n,
                 "Ng"   -> ng,
                 "Ngw"  -> ngw,
                 "Mm"   -> mm,
                 "Nn"   -> nn,
                 "Ngng" -> ngng,
                 "Ngngw"-> ngngw;

define InsertMorphBoundary [..] -> MorphemeBoundary || Alphabet _ MorphPhonSymbols ;

define CleanupMorphBoundary MorphemeBoundary -> 0 || WordBoundary Alphabet+ _ ;


!!!!!!!!!!!!!!!!!!!!!!!!!
!!!                   !!!
!!!      Filters      !!!
!!!                   !!!
!!!!!!!!!!!!!!!!!!!!!!!!!

define PostbaseFilter ~[ ?* "@₁" "~" ":" "(u)" {te} "[V→V]" "-" "@₁" "~" ":" "(u)" {te} ?* ];

define Filters [
	PostbaseFilter
];


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!                                    !!!
!!!      Morphophonological Rules      !!!
!!!                                    !!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

define SemiAndFinalE [..] -> a || WordBoundary (C) a _ C e   MorphemeBoundary "~"    ∘  ! final e-hopping
                     [..] -> i || WordBoundary (C) i _ C e   MorphemeBoundary "~"    ∘  ! final e-hopping
                     [..] -> u || WordBoundary (C) u _ C e   MorphemeBoundary "~"    ∘  ! final e-hopping
                        e -> 0 ||                    V C _   MorphemeBoundary "~"    ∘  ! final e-dropping
                        e -> 0 ||    _   MorphemeBoundary  "~" (MorphPhonSymbols*) V ∘  ! final e-dropping  
                     [..] -> a || WordBoundary (C) a _ C e [g | gh ("*")] MorphemeBoundary "~" ∘  ! semi-final e-hopping
                     [..] -> i || WordBoundary (C) i _ C e [g | gh ("*")] MorphemeBoundary "~" ∘  ! semi-final e-hopping
                     [..] -> u || WordBoundary (C) u _ C e [g | gh ("*")] MorphemeBoundary "~" ∘  ! semi-final e-hopping
                        e -> 0 ||                    V C _ [g | gh ("*")] MorphemeBoundary "~" ∘  ! semi-final e-dropping
                      "~" -> 0 || WordBoundary Alphabet+ MorphemeBoundary _                    ;  ! finally remove intermediate symbol ~

define SemiFinalE [..] -> a || WordBoundary (C) a _ C e [g | gh ("*")] MorphemeBoundary "~sf" ∘  ! e-hopping
                  [..] -> i || WordBoundary (C) i _ C e [g | gh ("*")] MorphemeBoundary "~sf" ∘  ! e-hopping
                  [..] -> u || WordBoundary (C) u _ C e [g | gh ("*")] MorphemeBoundary "~sf" ∘  ! e-hopping
                     e -> 0 ||                    V C _ [g | gh ("*")] MorphemeBoundary "~sf" ∘  ! e-dropping
                 "~sf" -> 0 || WordBoundary Alphabet+ MorphemeBoundary _                      ;  ! finally remove intermediate symbol ~sf 
				 
define FinalE     [..] -> a || WordBoundary (C) a _ C e MorphemeBoundary "~f"     ∘  ! e-hopping
                  [..] -> i || WordBoundary (C) i _ C e MorphemeBoundary "~f"     ∘  ! e-hopping
                  [..] -> u || WordBoundary (C) u _ C e MorphemeBoundary "~f"     ∘  ! e-hopping
                     e -> 0 || WordBoundary Alphabet+ V C _ MorphemeBoundary "~f" ∘  ! e-dropping
                     e -> 0 || WordBoundary Alphabet+ _ MorphemeBoundary "~f" V   ∘  ! e-dropping
                  "~f" -> 0 || WordBoundary Alphabet+ MorphemeBoundary _          ;  ! finally remove intermediate symbol ~f

define NoHopNoDropE "~h" -> 0     || (C) DoubleVowel [Alphabet - t] e MorphemeBoundary _      ∘ ! do not drop e if e-hopping is not
                    "~h" -> 0     || [ C | V ] C V [Alphabet - t] e MorphemeBoundary _        ∘ ! possible unless e is preceded by t
					"~h" -> 0     || C e C MorphemeBoundary _ MorphPhonSymbols* C             ∘ ! do not drop semi-final e
					"~h" -> "~sf" || WordBoundary Alphabet+ MorphemeBoundary _ "-w" ":" "(e)" ∘ ! originally ~sf 
                    "~h" -> "~"   || WordBoundary Alphabet+ MorphemeBoundary _                ; ! originally ~

define InterConsonantalE "(e)" -> e || C (MorphemeBoundary) MorphPhonSymbols* _  ∘  ! convert (e) to e when following a consonant
                         "(e)" -> 0 || V ("*") ("*") (MorphemeBoundary) MorphPhonSymbols* _  ;  ! otherwise delete it
						 
define WeakFinalC  gh   -> 0 || [ WordBoundary | C ] FullVowel _ MorphemeBoundary [("~f") | ("~sf")] "-w"  ∘
                   "-w" -> 0 || WordBoundary Alphabet+ MorphemeBoundary (MorphPhonSymbols*)  _               ;

define UnmarkStrongGh gh "*" -> gh || WordBoundary Alphabet+ MorphPhonSymbols* _ ;

define FinalVCDrop V C -> 0 || WordBoundary Alphabet+ _ MorphemeBoundary "––" ∘
                   V   -> 0 || WordBoundary Alphabet+ _ MorphemeBoundary "––" ∘
                  "––" -> 0                                                   ;

define FinalConsonantDropAssimilation [ gh | g ] -> gh  || gh ("*") MorphemeBoundary ("~f") "–" _   ∘
                                      [ gh | g ] -> g   || g  MorphemeBoundary       ("~f") "–" _   ∘
                                      [ gh | g ] -> wh  || w   MorphemeBoundary ("~f") "–" _ VoicelessC ∘
                                      [ gh | g ] -> w   || w   MorphemeBoundary ("~f") "–" _ VoicedC    ∘
                                      [ gh | g ] -> ghw || ghw MorphemeBoundary ("~f") "–" _        ∘
                                      [  q | k ] -> qw  || [ qw | ghw ] MorphemeBoundary ("~f") "–" _  ∘
                                      [  q | k ] -> kw  || [ kw | w   ] MorphemeBoundary ("~f") "–" _  ∘
                                      [  q | k ] -> k   || [ k  | g   ] MorphemeBoundary ("~f") "–" _  ∘
                                      [  q | k ] -> q   || [ q  | gh ("*") ] MorphemeBoundary ("~f") "–" _ ∘
                                              ng -> ngw || w   MorphemeBoundary ("~f") "–" _           ∘
                 C ("*") MorphemeBoundary ("~f") -> MorphemeBoundary || _ "–"  ∘
                                             "–" -> 0   || WordBoundary Alphabet+ MorphemeBoundary (MorphPhonSymbols*) _  ;

define ModifyTE "–"  -> 0 || V ("*") ("*") MorphemeBoundary MorphPhonSymbols*       _    ∘
                "~f" -> 0 || t e ("*") ("*") MorphemeBoundary ["@*" | "@₁" | "@₂"]  _    ∘
                ":"  -> 0 || t e ("*") ("*") MorphemeBoundary ["@*" | "@₁" | "@₂"] "~" _ ∘
                t e "*" "*" -> l || _ MorphemeBoundary "@*"                              ∘  ! for strongly special te's
                t e         -> s || V _ MorphemeBoundary ("@*") "@₂" MorphPhonSymbols* k ,, ! for postbases that begin with velars
                t e ("*")   -> t || V _ MorphemeBoundary ("@*") "@₂" MorphPhonSymbols* k ,, 
                t e "*"     -> l || _ MorphemeBoundary "@*"                              ,, ! for weakly special te's
                t e "*"     -> s || _ MorphemeBoundary "@*"                              ∘
                "*" ("*")   -> 0 || t e _                                                ∘
                l gh -> ll ghh || t e MorphemeBoundary "@₁" _                            ∘ ! for postbase @–lghii
                [..] -> e      || C t e MorphemeBoundary "@₁" ll _ ghh                   ∘
                [..] -> n e gh || t e MorphemeBoundary "@₁" MorphPhonSymbols* ng h _     ∘ ! for postbase @–nghite
                ng h -> 0      || t e MorphemeBoundary "@₁" MorphPhonSymbols* _ n e gh   ∘ 
                t e ("*") -> s || _ MorphemeBoundary "@₁" MorphPhonSymbols* i            ∘ ! for postbases that begin with i 
                [..] -> ll   || V t e MorphemeBoundary "@₁" MorphPhonSymbols* _ l        ∘ ! for postbases that begin with apicals
                l    -> 0    || V t e MorphemeBoundary "@₁" MorphPhonSymbols* ll _       ∘
                [..] -> nn   || V t e MorphemeBoundary "@₁" MorphPhonSymbols* _ n        ∘
                n    -> 0    || V t e MorphemeBoundary "@₁" MorphPhonSymbols* nn _       ∘
                [..] -> rr   || V t e MorphemeBoundary "@₁" MorphPhonSymbols* _ r        ∘
                r    -> 0    || V t e MorphemeBoundary "@₁" MorphPhonSymbols* rr _       ∘
                [..] -> s    || V t e MorphemeBoundary "@₁" MorphPhonSymbols* _ [y | z]  ∘
                y    -> 0    || V t e MorphemeBoundary "@₁" MorphPhonSymbols* s _        ∘
                e    -> 0    || V t _ MorphemeBoundary "@₁" MorphPhonSymbols* [ m | v ]  ∘ ! for postbases that begin with labials
                v    -> f    || C t e MorphemeBoundary "@₁" MorphPhonSymbols* _          ∘
                l    -> ll   || [g | gh | ghw | r] t e MorphemeBoundary "@₁" MorphPhonSymbols* _       ∘ ! Undoubling Rule 3
                g    -> gg   || _ t e MorphemeBoundary "@₁" MorphPhonSymbols* [m | n | r | v | y | z]  ∘
                gh   -> ghh  || _ t e MorphemeBoundary "@₁" MorphPhonSymbols* [m | n | r | v | y | z]  ∘
                ghw  -> ghhw || _ t e MorphemeBoundary "@₁" MorphPhonSymbols* [m | n | r | v | y | z]  ∘
                l    -> ll   || _ t e MorphemeBoundary "@₁" MorphPhonSymbols* [m | n | r | v | y | z]  ∘
                r    -> rr   || _ t e MorphemeBoundary "@₁" MorphPhonSymbols* [m | n | r | v | y | z]  ∘
                t e  -> 0    || _ MorphemeBoundary MorphPhonSymbols* "@₁"                ∘ ! drop base-final te
                "@*" -> 0, 
                "@₁" -> 0,
                "@₂" -> 0    || WordBoundary Alphabet+ MorphemeBoundary (MorphPhonSymbols*)  _  ;

define ResolveAllomorphy ["(g/t)" | "(g)"] -> g || V V MorphemeBoundary [("~f") | ("~")] _        ∘
                         ["(g/t)" | "(t)"] -> t ||   C MorphemeBoundary ("~f") _                  ∘
                         "(ng₁)" -> "ng"        ||   V ("*") MorphemeBoundary MorphPhonSymbols* _ ∘
                         "(s/z)" -> s || C ("*") MorphemeBoundary _         ∘
                         "(s/z)" -> z || V       MorphemeBoundary _         ∘                                 
                         "(p/v)" -> p || C ("*") MorphemeBoundary ("~f") _  ∘
                         "(p/v)" -> v || V       MorphemeBoundary ("~f") _  ∘
                         "(t/y)" -> t || C ("*") MorphemeBoundary _         ∘
                         "(t/y)" -> y || V       MorphemeBoundary _         ∘
                         "(pete)fte" -> p e t e f t e MorphemeBoundary || C ("*") _  ,,
                         "(pete)fte" -> p e t e       MorphemeBoundary || C ("*") _  ∘ 
                         "(pete)fte" -> f t e         MorphemeBoundary || V       _  ∘
                         "(te)"  -> t e  || C ("*") MorphemeBoundary _                                  ∘
                         "(i₁)"  -> i    || e MorphemeBoundary MorphPhonSymbols* _                      ∘
                         "(i₂)"  -> i    || [Alphabet - t] e MorphemeBoundary MorphPhonSymbols* _       ∘
                         "(i/u)" -> i    || t e ("*") MorphemeBoundary MorphPhonSymbols* _              ∘
                         "(i/u)" -> u    || [Alphabet - t] e MorphemeBoundary MorphPhonSymbols* _       ∘
                         "(i/u)" -> u    || [Alphabet - FullVowel] MorphemeBoundary MorphPhonSymbols* _ ∘
                         "(u)"   -> u    || [Alphabet - FullVowel] MorphemeBoundary MorphPhonSymbols* _ ∘
                         "(ng₂)" -> "ng" || FullVowel MorphemeBoundary MorphPhonSymbols* _              ∘
                         "(a)"   -> a    || e MorphemeBoundary MorphPhonSymbols* _                      ∘
                         "(s)"   -> s    || V MorphemeBoundary _                                        ∘
                         "(at)"  -> a t  || t MorphemeBoundary MorphPhonSymbols* _                      ∘
                         "(at)"  -> a t  || [C - t] (V) MorphemeBoundary MorphPhonSymbols* _            ∘
						  "~" "(q/t)" -> "@₁" q || t e ("*") ("*") MorphemeBoundary _                   ∘
                         "(q/t)" -> t    || C MorphemeBoundary "~" _                                    ∘
                         "(g/t)" -> 0,
                         "(g)"   -> 0,
                         "(te)"  -> 0,
                         "(t)"   -> 0,
                         "(ng₁)" -> 0,
                         "(s/z)" -> 0,
                         "(p/v)" -> 0,
                         "(t/y)" -> 0,
                         "(i₁)"  -> 0,
                         "(i₂)"  -> 0,
                         "(i/u)" -> 0,
                         "(u)"   -> 0,
                         "(ng₂)" -> 0,
                         "(a)"   -> 0,
                         "(s)"   -> 0,
                         "(at)"  -> 0,
					     "(q/t)" -> 0	 || WordBoundary Alphabet+ MorphemeBoundary (MorphPhonSymbols*) _  ;

define UvularDropping gh MorphemeBoundary ":" e -> a MorphemeBoundary || [ WordBoundary | C ] a _ ∘
                      gh MorphemeBoundary ":" e -> i MorphemeBoundary || [ WordBoundary | C ] i _ ∘
                      gh MorphemeBoundary ":" e -> u MorphemeBoundary || [ WordBoundary | C ] u _ ∘
                      gh MorphemeBoundary ":" a -> a MorphemeBoundary || [ WordBoundary | C ] FullVowel _ ∘
                      gh MorphemeBoundary ":" i -> i MorphemeBoundary || [ WordBoundary | C ] FullVowel _ ∘
                      gh MorphemeBoundary ":" u -> u MorphemeBoundary || [ WordBoundary | C ] FullVowel _ ∘
                                                  ":"   -> 0 || WordBoundary Alphabet+ MorphemeBoundary _ ;

define VelarUvularRounding k -> kw, g -> w, gg -> wh, ng -> ngw, ngng -> ngngw || [C|V - u] _ u (MorphemeBoundary) i (MorphemeBoundary) ∘
                           k -> kw, g -> w, gg -> wh, ng -> ngw, ngng -> ngngw || [C|V - u] _ u (MorphemeBoundary) a (MorphemeBoundary) ∘
                                     h -> h w, q -> qw, gh -> ghw, ghh -> ghhw || [C|V - u] _ u (MorphemeBoundary) i (MorphemeBoundary) ∘
                                     h -> h w, q -> qw, gh -> ghw, ghh -> ghhw || [C|V - u] _ u (MorphemeBoundary) a (MorphemeBoundary) ∘
                                    ["(g/t)" | "(g)" | g ] -> w || a u MorphemeBoundary (MorphemeBoundary) MorphPhonSymbols* _ [ V - u] ;

define TripleCluster V -> 0 || WordBoundary Alphabet+ [ V - e ] MorphemeBoundary "~" "(g)" _ V  ∘  ! for [Trns][Ind]
                     FullVowel -> 0 || FullVowel _ FullVowel                                    ∘
					        gh -> 0 || [ g | gh ] t e ("*") ("*") MorphemeBoundary "@₁" "–" _   ;  ! for @–ghpagte

define VowelDominance a i -> i i  ∘
                      i a -> i i  ∘
                      u i -> i i  ∘
                      i u -> i i  ∘
                      a u -> a a  ∘
                      u a -> a a  ∘
                      e i -> i    ∘
                      e a -> a    ∘
                      e u -> u    ;

define GKa "@~–(g)ka" "[Cond]" ->  "~" "–" k || C _              ∘
           "@~–(g)ka" "[Cond]" ->      "~" k || FullVowel _      ∘
           "@~–(g)ka" "[Cond]" -> "@*" "~" k || t e "*" ("*") _  ,, 
           "@~–(g)ka" "[Cond]" -> "@₂" "~" k || t e "*" ("*") _  ∘
           "@~–(g)ka" "[Cond]" -> "@₂" "~" k || V t e _          ∘
           "@~–(g)ka" "[Cond]" ->          k || C t e _          ∘
           "@~–(g)ka" "[Cond]" ->  "~sf" g k ||     e _          ,, 
           "@~–(g)ka" "[Cond]" ->     "~f" k ||     e _          ∘ 
           "@~–(g)ka" "[Cond]" ->    "~" g k || "(pete)fte" MorphemeBoundary _ ∘
           "@~–(g)ka" "[Cond]" ->          0                                   ∘
           "@~–(g)ka" ->  "~" "–" k a || C _              ∘
           "@~–(g)ka" ->      "~" k a || FullVowel _      ∘
           "@~–(g)ka" -> "@*" "~" k a || t e "*" ("*") _  ∘ 
           "@~–(g)ka" -> "@₂" "~" k a || V t e _          ∘
           "@~–(g)ka" ->          k a || C t e _          ∘
           "@~–(g)ka" ->  "~sf" g k a ||     e _          ,, 
           "@~–(g)ka" ->     "~f" k a ||     e _          ∘ 
           "@~–(g)ka" ->    "~" g k a || "(pete)fte" MorphemeBoundary _ ∘
           "@~–(g)ka" ->            0                                   ;

define GKe "@~–(g)ke" ->          k a || "@₁" "~f" n a _ ng                                 ∘ ! for [Trns][Fut][Opt]
           "@~–(g)ke" ->          k e || "@₁" "~f" n a _ [Alphabet - ng]                    ∘ ! for [Trns][Fut][Opt]
           "@~–(g)ke" ->  "~" "–" k a || C _ (MorphPhonSymbols*) ["(ng₁)" | ng]             ∘
           "@~–(g)ke" ->  "~" "–" k e || C _                                                ∘
           "@~–(g)ke" ->      "~" k a || FullVowel _ (MorphPhonSymbols*) ["(ng₁)" | ng]     ∘
           "@~–(g)ke" ->      "~" k e || FullVowel _                                        ∘
           "@~–(g)ke" -> "@*" "~" k a || t e "*" ("*") _ (MorphPhonSymbols*) ["(ng₁)" | ng] ∘
           "@~–(g)ke" -> "@*" "~" k e || t e "*" ("*") _                                    ∘
           "@~–(g)ke" -> "@₂" "~" k a || V t e _ (MorphPhonSymbols*) ["(ng₁)" | ng]         ,, 
           "@~–(g)ke" ->        g k a || V t e _ (MorphPhonSymbols*) ["(ng₁)" | ng]         ∘
           "@~–(g)ke" -> "@₂" "~" k e || V t e _                                            ,, 
           "@~–(g)ke" ->        g k e || V t e _                                            ∘
           "@~–(g)ke" ->          k a || C t e _ (MorphPhonSymbols*) ["(ng₁)" | ng]         ,, 
           "@~–(g)ke" ->        g k a || C t e _ (MorphPhonSymbols*) ["(ng₁)" | ng]         ∘ 
           "@~–(g)ke" ->          k e || C t e _                                            ,, 
           "@~–(g)ke" ->        g k e || C t e _                                            ∘
           "@~–(g)ke" ->  "~sf" g k a ||     e _ (MorphPhonSymbols*) ["(ng₁)" | ng]         ,, 
           "@~–(g)ke" ->   "~f"   k a ||     e _ (MorphPhonSymbols*) ["(ng₁)" | ng]         ∘ 
           "@~–(g)ke" ->  "~sf" g k e ||     e _                                            ,, 
           "@~–(g)ke" ->   "~f"   k e ||     e _                                            ∘
           "@~–(g)ke" ->    "~" g k e || "(pete)fte" MorphemeBoundary _ ∘
           "@~–(g)ke" ->            0                                   ;

define MultipleForms GKa ∘
                     GKe ∘
                     "[Opt_PRS_2Sg]" -> g i     || V V  _                 ∘
                     "[Opt_PRS_2Sg]" -> "~sf" i || [C - gh] _             ∘
                     "[Opt_PRS_2Sg]" -> "~sf" i || [e | DoubleVowel] gh _ ∘
                     "[Opt_PRS_2Sg]" -> n       || t e _                  ∘
                     "[Opt_PRS_2Sg]" -> "~f" i  || [C - t] e _            ∘
                     "[Opt_PRS_2Sg]" -> ":" a   || FullVowel gh _         ∘
                     "[Opt_PRS_2Sg]" -> 0                                 ∘
                     "[Opt_FUT_Intr]" -> "@₁" "–" l gh a a || [ V ("*") ("*") | "(pete)fte" ] _ ∘
                     "[Opt_FUT_Intr]" -> "~sf" "–" ghh a a || gh _        ∘
                     "[Opt_FUT_Intr]" -> "~sf" "–" gg a a  || g  _        ∘
                     "[Opt_FUT_Intr]" -> n a k e n                        ∘
                     "[To_Feel_R_Toward]" ->       "~" "–" k e || V _     ∘
                     "[To_Feel_R_Toward]" -> "@₁" "~f" y u k e || C _     ∘
                     "[Opt_PRS_2Sg_3Sg]" -> "~f" "(i₁)" g u || [ V ("*") ("*") | "(pete)fte" ] _    ∘
                     "[Opt_PRS_2Sg_3Sg]" -> "~sf" "–" ghh u || [ q | gh | ghh | qw | ghw | ghhw ] _ ∘
                     "[Opt_PRS_2Sg_3Sg]" -> "~sf" "–" gg u  || C _                                  ∘
	                 "~f-w/-w" ->      "-w" || WordBoundary (C) V C (C) V (C) _                     ∘
                     "~f-w/-w" -> "~f" "-w"                                                         ∘
                     "~sf-w:(e)tgun/teggun" -> t e gg u n || [ gh "*" | g ] _                       ,, 
                     "~sf-w:(e)tgun/teggun" -> "~sf" "-w" ":" "(e)" t g u n                         ∘
                     "@₁–lghii/@*ngugh*" -> "@₁" "–" l gh i i || [ [Alphabet - "*"] | "(pete)fte" ] _ ,,
                     "@₁–lghii/@*ngugh*" -> "@*" ng u gh "*" || "*" _                                 ∘             
                     "@₁~fy/~f(ng₁)" -> "~f" "(ng₁)" || [ V ("*") ("*") | "(pete)fte" ] _             ,,  
                     "@₁~fy/~f(ng₁)" -> "@₁" "~f" y  || [ [ C | V ] ("*") ("*") | "(pete)fte" ] _     ∘
                     "@₁" "–" ng h i t e "*" "*" "@₁~flu/na" k u    -> "–" g p e n a a n        ∘
                     "@₁" "–" ng h i t e "*" "*" "@₁~flu/na" t e n  -> "–" g p e n a ng         ∘
                     "@₁" "–" ng h i t e "*" "*" "@₁~flu/na" t a    -> "–" g p e n a a m t a    ∘
                     "@₁" "–" ng h i t e "*" "*" "@₁~flu/na" t u ng -> "–" g p e n a a m t u ng ∘
                     "@₁" "–" ng h i t e "*" "*" "@₁~flu/na"        -> "–" g p e n a            ∘
                     "~" ":" "(ng₁)" i t e "*" "*" "@₁~flu/na" k u    -> "~f" "–" ng u n a a n        ∘
                     "~" ":" "(ng₁)" i t e "*" "*" "@₁~flu/na" t e n  -> "~f" "–" ng u n a ng         ∘
                     "~" ":" "(ng₁)" i t e "*" "*" "@₁~flu/na" t a    -> "~f" "–" ng u n a a m t a    ∘
                     "~" ":" "(ng₁)" i t e "*" "*" "@₁~flu/na" t u ng -> "~f" "–" ng u n a a m t u ng ∘
                     "~" ":" "(ng₁)" i t e "*" "*" "@₁~flu/na"        -> "~f" "–" ng u n a            ∘
                     "@₁~flu/na" k u -> n a a n            || t e "*" _ ∘
                     "@₁~flu/na" t e n -> n a ng           || t e "*" _ ∘
                     "@₁~flu/na" t a -> n a a m t a        || t e "*" _ ∘
                     "@₁~flu/na" t u ng  -> n a a m t u ng || t e "*" _ ∘
                     "@₁~flu/na" -> "@₁" "~f" l u                       ∘
					 [ a | u ] -> i || _ gh "~sf" ":" "(e)" s q e       ;

define EncliticAttachment "[Encl]" m i -> 0  || m i _              ∘
                                     q -> gh || _ "[Encl]" Nasal   ∘
									 k -> g  || _ "[Encl]" Nasal   ∘
                                     t -> 0  || _ "[Encl]" ng      ∘
                                     q -> gh || _ "[Encl]" q u n   ,,
                                     q -> 0  || _ "[Encl]" q u n   ∘
                                     t -> s  || _ "[Encl]" t a     ∘
                                  [..] -> n  || V _ "[Encl]" t u q ∘
                              "[Encl]" -> 0                        ;



!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!                          !!!
!!!      Clean-Up Rules      !!!
!!!                          !!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

define ClusterDevoicing k  -> q  || gh _ ∘
                        kw -> qw || gh _ ∘
                        y -> s || _ [Stop | VoicelessFricative | VoicelessNasal] ∘
                        y -> s || [Stop | VoicelessFricative | VoicelessNasal] _ ∘
                        t [z | y] -> s                                           ∘ ! tz/ty cluster becomes s
                        v -> f || Stop _                                         ∘
                        v -> f || _ Stop                                         ∘
                        t v -> f || C _                                          ∘
                        v -> f || k _                                            ∘
                        z -> s || Stop _                                         ;

define Undoubling ll -> l, rr -> r, gg -> g, ghh -> gh, ghhw -> ghw || _ [Stop | f | s]     ∘   
                  ll -> l, rr -> r, gg -> g, ghh -> gh, ghhw -> ghw || [Stop | f | s | h] _ ∘   
                  mm -> m, nn -> n, ngng -> ng, ngngw -> ngw        || [Stop | f | s | h] _ ∘
                  ll -> l, rr -> r, gg -> g, ghh -> gh, ghhw -> ghw || _ ll ∘ 
                  ll -> l, rr -> r, gg -> g, ghh -> gh, ghhw -> ghw || [ll| rr | gg | ghh |ghhw] _ ∘ 
                  mm -> m, nn -> n, ngng -> ng, ngngw -> ngw        || [ll| rr | gg | ghh |ghhw] _ ;

def BaseFinalEndings ghw      -> qw , 
                     gh ("*") -> q  , 
                     g        -> k  ,
                     w        -> kw ,
                     t e      -> t a  ||   _ (Enclitic) WordBoundary , 
                     t e      -> n    || V _ (Enclitic) WordBoundary ∘
                     e        -> a    ||   _            WordBoundary ∘
                     gh q     -> q    ||   _ (Enclitic) WordBoundary ∘
                     t        -> n  ,
                     ll       -> l  ,
                     k        -> g    ||   WordBoundary Alphabet+ _ "ng" u q WordBoundary ;


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!                        !!!
!!!      Rule Cascade      !!!
!!!                        !!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

define Rules [
    Filters                        ∘
    Lexicon                        ∘
    Lowercase                      ∘
    MultipleForms                  ∘
    InsertMorphBoundary            ∘
    TripleCluster                  ∘
    !! ITERATION 1 !!
    ResolveAllomorphy              ∘
    ModifyTE                       ∘
    NoHopNoDropE                   ∘
    SemiAndFinalE                  ∘
    SemiFinalE                     ∘
    FinalVCDrop                    ∘
    FinalConsonantDropAssimilation ∘
    WeakFinalC                     ∘
    UnmarkStrongGh                 ∘
    InterConsonantalE              ∘
    UvularDropping                 ∘
    VelarUvularRounding            ∘
    FinalE                         ∘
    VowelDominance                 ∘
    CleanupMorphBoundary           ∘
    !! ITERATION 2 !!
    ResolveAllomorphy              ∘
    ModifyTE                       ∘
    NoHopNoDropE                   ∘
    SemiAndFinalE                  ∘
    SemiFinalE                     ∘
    FinalVCDrop                    ∘
    FinalConsonantDropAssimilation ∘
    WeakFinalC                     ∘
    UnmarkStrongGh                 ∘
    InterConsonantalE              ∘
    UvularDropping                 ∘
    VelarUvularRounding            ∘
    FinalE                         ∘
    VowelDominance                 ∘
    CleanupMorphBoundary           ∘
    !! ITERATION 3 !!
    ResolveAllomorphy              ∘
    ModifyTE                       ∘
    NoHopNoDropE                   ∘
    SemiAndFinalE                  ∘
    SemiFinalE                     ∘
    FinalVCDrop                    ∘
    FinalConsonantDropAssimilation ∘
    WeakFinalC                     ∘
    UnmarkStrongGh                 ∘
    InterConsonantalE              ∘
    UvularDropping                 ∘
    VelarUvularRounding            ∘
    FinalE                         ∘
    VowelDominance                 ∘
    CleanupMorphBoundary           ∘
    !! ITERATION 4 !!
    ResolveAllomorphy              ∘
    ModifyTE                       ∘
    NoHopNoDropE                   ∘
    SemiAndFinalE                  ∘
    SemiFinalE                     ∘
    FinalVCDrop                    ∘
    FinalConsonantDropAssimilation ∘
    WeakFinalC                     ∘
    UnmarkStrongGh                 ∘
    InterConsonantalE              ∘
    UvularDropping                 ∘
    VelarUvularRounding            ∘
    FinalE                         ∘
    VowelDominance                 ∘
    CleanupMorphBoundary           ∘
    !! ITERATION 5 !!
    ResolveAllomorphy              ∘
    ModifyTE                       ∘
    NoHopNoDropE                   ∘
    SemiAndFinalE                  ∘
    SemiFinalE                     ∘
    FinalVCDrop                    ∘
    FinalConsonantDropAssimilation ∘
    WeakFinalC                     ∘
    UnmarkStrongGh                 ∘
    InterConsonantalE              ∘
    UvularDropping                 ∘
    VelarUvularRounding            ∘
    FinalE                         ∘
    VowelDominance                 ∘
    CleanupMorphBoundary           ∘
    !! ITERATION 6 !!
    ResolveAllomorphy              ∘
    ModifyTE                       ∘
    NoHopNoDropE                   ∘
    SemiAndFinalE                  ∘
    SemiFinalE                     ∘
    FinalVCDrop                    ∘
    FinalConsonantDropAssimilation ∘
    WeakFinalC                     ∘
    UnmarkStrongGh                 ∘
    InterConsonantalE              ∘
    UvularDropping                 ∘
    VelarUvularRounding            ∘
    FinalE                         ∘
    VowelDominance                 ∘
    CleanupMorphBoundary           ∘
    !! ITERATION 7 !!
    ResolveAllomorphy              ∘
    ModifyTE                       ∘
    NoHopNoDropE                   ∘
    SemiAndFinalE                  ∘
    SemiFinalE                     ∘
    FinalVCDrop                    ∘
    FinalConsonantDropAssimilation ∘
    WeakFinalC                     ∘
    UnmarkStrongGh                 ∘
    InterConsonantalE              ∘
    UvularDropping                 ∘
    VelarUvularRounding            ∘
    FinalE                         ∘
    VowelDominance                 ∘
    CleanupMorphBoundary           ∘
    !! ITERATION 8 !!
    ResolveAllomorphy              ∘
    ModifyTE                       ∘
    NoHopNoDropE                   ∘
    SemiAndFinalE                  ∘
    SemiFinalE                     ∘
    FinalVCDrop                    ∘
    FinalConsonantDropAssimilation ∘
    WeakFinalC                     ∘
    UnmarkStrongGh                 ∘
    InterConsonantalE              ∘
    UvularDropping                 ∘
    VelarUvularRounding            ∘
    FinalE                         ∘
    VowelDominance                 ∘
    CleanupMorphBoundary           ∘
    TripleCluster                  ∘
	EncliticAttachment             ∘
    ClusterDevoicing               ∘
    BaseFinalEndings               ∘
    Undoubling
];

define RulesExceptions [
    Filters                        ∘
    Exceptions                     ∘
    Lowercase                      ∘
    MultipleForms                  ∘
    InsertMorphBoundary            ∘
    TripleCluster                  ∘
    !! ITERATION 1 !!
    ResolveAllomorphy              ∘
    ModifyTE                       ∘
    NoHopNoDropE                   ∘
    SemiAndFinalE                  ∘
    SemiFinalE                     ∘
    FinalVCDrop                    ∘
    FinalConsonantDropAssimilation ∘
    WeakFinalC                     ∘
    UnmarkStrongGh                 ∘
    InterConsonantalE              ∘
    UvularDropping                 ∘
    VelarUvularRounding            ∘
    FinalE                         ∘
    VowelDominance                 ∘
    CleanupMorphBoundary           ∘
    !! ITERATION 2 !!
    ResolveAllomorphy              ∘
    ModifyTE                       ∘
    NoHopNoDropE                   ∘
    SemiAndFinalE                  ∘
    SemiFinalE                     ∘
    FinalVCDrop                    ∘
    FinalConsonantDropAssimilation ∘
    WeakFinalC                     ∘
    UnmarkStrongGh                 ∘
    InterConsonantalE              ∘
    UvularDropping                 ∘
    VelarUvularRounding            ∘
    FinalE                         ∘
    VowelDominance                 ∘
    CleanupMorphBoundary           ∘
    !! ITERATION 3 !!
    ResolveAllomorphy              ∘
    ModifyTE                       ∘
    NoHopNoDropE                   ∘
    SemiAndFinalE                  ∘
    SemiFinalE                     ∘
    FinalVCDrop                    ∘
    FinalConsonantDropAssimilation ∘
    WeakFinalC                     ∘
    UnmarkStrongGh                 ∘
    InterConsonantalE              ∘
    UvularDropping                 ∘
    VelarUvularRounding            ∘
    FinalE                         ∘
    VowelDominance                 ∘
    CleanupMorphBoundary           ∘
    !! ITERATION 4 !!
    ResolveAllomorphy              ∘
    ModifyTE                       ∘
    NoHopNoDropE                   ∘
    SemiAndFinalE                  ∘
    SemiFinalE                     ∘
    FinalVCDrop                    ∘
    FinalConsonantDropAssimilation ∘
    WeakFinalC                     ∘
    UnmarkStrongGh                 ∘
    InterConsonantalE              ∘
    UvularDropping                 ∘
    VelarUvularRounding            ∘
    FinalE                         ∘
    VowelDominance                 ∘
    CleanupMorphBoundary           ∘
    !! ITERATION 5 !!
    ResolveAllomorphy              ∘
    ModifyTE                       ∘
    NoHopNoDropE                   ∘
    SemiAndFinalE                  ∘
    SemiFinalE                     ∘
    FinalVCDrop                    ∘
    FinalConsonantDropAssimilation ∘
    WeakFinalC                     ∘
    UnmarkStrongGh                 ∘
    InterConsonantalE              ∘
    UvularDropping                 ∘
    VelarUvularRounding            ∘
    FinalE                         ∘
    VowelDominance                 ∘
    CleanupMorphBoundary           ∘
    !! ITERATION 6 !!
    ResolveAllomorphy              ∘
    ModifyTE                       ∘
    NoHopNoDropE                   ∘
    SemiAndFinalE                  ∘
    SemiFinalE                     ∘
    FinalVCDrop                    ∘
    FinalConsonantDropAssimilation ∘
    WeakFinalC                     ∘
    UnmarkStrongGh                 ∘
    InterConsonantalE              ∘
    UvularDropping                 ∘
    VelarUvularRounding            ∘
    FinalE                         ∘
    VowelDominance                 ∘
    CleanupMorphBoundary           ∘
    !! ITERATION 7 !!
    ResolveAllomorphy              ∘
    ModifyTE                       ∘
    NoHopNoDropE                   ∘
    SemiAndFinalE                  ∘
    SemiFinalE                     ∘
    FinalVCDrop                    ∘
    FinalConsonantDropAssimilation ∘
    WeakFinalC                     ∘
    UnmarkStrongGh                 ∘
    InterConsonantalE              ∘
    UvularDropping                 ∘
    VelarUvularRounding            ∘
    FinalE                         ∘
    VowelDominance                 ∘
    CleanupMorphBoundary           ∘
    !! ITERATION 8 !!
    ResolveAllomorphy              ∘
    ModifyTE                       ∘
    NoHopNoDropE                   ∘
    SemiAndFinalE                  ∘
    SemiFinalE                     ∘
    FinalVCDrop                    ∘
    FinalConsonantDropAssimilation ∘
    WeakFinalC                     ∘
    UnmarkStrongGh                 ∘
    InterConsonantalE              ∘
    UvularDropping                 ∘
    VelarUvularRounding            ∘
    FinalE                         ∘
    VowelDominance                 ∘
    CleanupMorphBoundary           ∘
    TripleCluster                  ∘
	EncliticAttachment             ∘
    ClusterDevoicing               ∘
    BaseFinalEndings               ∘
    Undoubling
];


define Grammar [ RulesExceptions .P. Rules ] ;

!regex Grammar.l;
push Grammar
