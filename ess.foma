#!/usr/bin/env foma -f

read lexc exceptions.lexc
define Exceptions

read lexc ess.lexc
define Lexicon


!==============
! MISC SYMBOLS
!==============
! "^"    morpheme boundary
! .#.    word boundary
! %{g%} h  weak gh


!======
! SETS
!======

define C          [ f | g | h | k | l | m |
                    n | p | q | r | s | t |
                    v | w | y | z |
                    %{t%} | %{g%} | %{k%} ] ;

define Stop       [ p   | t   | k   | q   |
                    k w | q w ];

define VoicedC    [ g h w | g h |
                    v | l | z   | y | r | g | w |
                    m | n | n g | n g w ] ;

define UnvoicedC  [ p   | t   | k   | q   |
                    k w | q w |
                    f   | s   | h   |
                    l l | r r | g g | w h | g h h | g h h w |
                    m m | n n | n g n g   | n g n g w ] ;

define MultiCharC [ n g n g w |
                    n g n g   | g h h w | g h h |
                    g h w     | n g w   |
                    g g       | g h     | k w   | l l | m m |
                    n g       | n n     | r r   | q w | w h ];

define FullVowel  [ a | i | u ]     ;
define V          [ e | FullVowel ] ;

define Allomorph  [ %{E%} | %{I%} | %{GI%} | %{AI%} ] ;


!=======
! RULES
!=======

define Lowercase "A" -> a ,
                 "I" -> i ,
                 "U" -> u ,
                 "E" -> e ,
                 "P" -> p ,
                 "T" -> t ,
                 "K" -> k ,
                 "Q" -> q ,
                 "V" -> v ,
                 "L" -> l ,
                 "Z" -> z ,
                 "Y" -> y ,
                 "R" -> r ,
                 "G" -> g ,
                 "W" -> w ,
                 "F" -> f ,
                 "S" -> s ,
                 "M" -> m ,
                 "N" -> n ;

!------------------------------
! E-DROPPING AND HOPPING RULES
!------------------------------

define FinalE %{%.f%.%} -> 0 || [ (C) C C & ~MultiCharC ] e "^" _ [ MultiCharC | C ] .o. ! do not hop or drop final e if doing so results
                                                                                         ! in a cluster of three consonants e.g.
                                                                                         ! riigte[Abl.Mod][Sg] -> riigtmeng
                                                                                         ! [Jacobson (2001) p.21]
                  [..] -> e || .#. ( MultiCharC | C ) FullVowel _ C e "^" %{%.f%.%}  .o. ! hop final -e
                     e -> 0 || [ ? - .#.] [ MultiCharC | C ] _ "^" %{%.f%.%}         .o. ! drop final -e as long it isn't in the first syllable
               %{%.f%.%} -> 0                                                        ;


define SemiFinalE %{%.sf%.%} -> 0 || [ (C) C C & ~MultiCharC ] e g (h) "^" _                                           .o.
                        [..] -> e ||      .#. ( MultiCharC | C ) FullVowel _ [ MultiCharC | C ] e g (h) "^" %{%.sf%.%} .o.
                           e -> 0 ||        [ ? - .#. ] [ MultiCharC | C ] _ g (h) "^" %{%.sf%.%}                      .o.
                  %{%.sf%.%} -> 0                                                                                      ;


define ShortRootFinalE e -> a || .#. C (C) V C (C) _ "^" %{%.fS%.%} .o. ! [Jacobson (2001) p.38]
              %{%.fS%.%} -> 0                                       ;


define LongRootFinalE e -> 0 || _ "^" %{%.fL%.%} .o. ! drop final -e but do not hop if root exceeds two syllables
             %{%.fL%.%} -> 0                     ;   ! [Jacobson (2001) p.32]


!-------------------------
! CONSONANT-RELATED RULES
!-------------------------

define DropFinalC g h -> g     || g               "^" %{%.m%.%} _ [ ? - .#. ]       .o. ! assimilate gh- onset to dropped -g
                  g h -> g h w || g h w           "^" %{%.m%.%} _ [ ? - .#. ]       .o. ! assimilate gh- onset to dropped -ghw
                  g h -> w h   || %{k%} w         "^" %{%.m%.%} _ UnvoicedC         .o. ! assimilate gh- onset to dropped -w
                  g h -> w     || %{k%} w         "^" %{%.m%.%} _ VoicedC           .o. ! assimilate gh- onset to dropped -w
                    g -> g h   || [ g | %{g%} ] h "^" %{%.m%.%} _ [ V | C - g - h ] .o. ! assimilate g- onset to dropped -gh
                    k -> q w   || g h w           "^" %{%.m%.%} _ [ ? - .#. ]       .o. ! assimilate k-  onset to dropped -ghw
                    k -> q     || [ g | %{g%} ] h "^" %{%.m%.%} _ [ ? - .#. ]       .o. ! assimilate k-  onset to dropped -gh
                    k -> k w   || w               "^" %{%.m%.%} _ [ ? - .#. ]       .o. ! assimilate k-  onset to dropped -w
                  g g -> g h h ||             g h "^" %{%.m%.%} _                   .o. ! assimilate gg- onset to dropped -gh [Jacobson (2001) p.66]
  [ ~MultiCharC & C ] -> 0     ||                               _ "^" %{%.m%.%}     .o. ! drop root-final consonant
  [ g | %{g%} ] ( h ) -> 0     ||                               _ "^" %{%.m%.%}     .o. ! drop -g in root-final -gh, -gh in -ghw
           MultiCharC -> 0     ||                               _ "^" %{%.m%.%}     .o. ! drop root-final consonant
            %{%.m%.%} -> 0                                                          ;


define DropWeakC %{g%} h -> 0 || _ "^" %{%.w%.%} .o. ! drop weak -gh from the root
               %{%.w%.%} -> 0                    ;


define DropUvular %{g%} h -> 0   || C FullVowel _ "^" %{%.c%.%} [ FullVowel | Allomorph ] .o. ! drop uvular -gh between two single vowels
                      g h -> 0   || C FullVowel _ "^" %{%.c%.%} [ FullVowel | Allomorph ] .o. ! where the second vowel can be a full vowel
                %{%.c%.%} -> 0                                                            ;   ! or an allomorph


define VelarUvularRounding       g -> w         || [ i | a ] u _ [ C | V - u ] .o. ! velar/uvular rounding [Jacobson (2001) p.30]
                                                                                   ! unclear if this affects other phonemes besides -g
                           n g n g -> n g n g w || [ C | V - u ] _ u [ i | a ] .o. ! velar/uvular rounding [Jacobson (2001) p.36-37]
                               n g -> n g w     || [ C | V - u ] _ u [ i | a ] .o. ! needs to occur before vowel dominance
                             g h h -> g h h w   || [ C | V - u ] _ u [ i | a ] .o.
                               g h -> g h w     || [ C | V - u ] _ u [ i | a ] .o.
                               g g -> w h       || [ C | V - u ] _ u [ i | a ] .o.
                                 k -> k w       || [ C | V - u ] _ u [ i | a ] .o.
                                 g -> w         || [ C | V - u ] _ u [ i | a ] .o.
                                 q -> q w       || [ C | V - u ] _ u [ i | a ] ;


!---------------------------------------
! OTHER / MISC MORPHOPHONOLOGICAL RULES
!---------------------------------------

define VowelDominance a i -> i i  .o.
                      i a -> i i  .o.
                      u i -> i i  .o.
                      i u -> i i  .o.
                      a u -> a a  .o.
                      u a -> a a  .o.
                      i e -> i i  .o. ! e-hopping
                      a e -> a a  .o.
                      u e -> u u  ;


define DeleteEBeforeVowel e -> 0 || _ "^" a .o. ! [Intr][Intrg][1Pl]:%^ste%^a -> %^st%^a
                          e -> 0 || _ "^" i .o. ! [Intr][Opt][2Pl/Du] drop final -e, e.g. aanitek but there is no ~f in these morphemes
                          e -> 0 || _ "^" u ;   ! [Intr][Opt][1Du]:%^ste%u -> %^st%^u


define DropMiddleVowel V -> 0 || V _ V ;


!-------------------
! ALLOMORPHY RULES
!-------------------

define AddE %{E%} -> a || a "^" _ .o.
            %{E%} -> i || i "^" _ .o.
            %{E%} -> u || u "^" _ .o.
            %{E%} -> e || C "^" _ .o.
            %{E%} -> 0            ;


define ResolveG %{G%} -> g || FullVowel ("^") FullVowel "^" _     .o.
                %{G%} -> 0                                        ;


define ResolveI %{I%} -> e ||       g h "^" _ .o. ! for derivational suffix ~sf:(e)sqe [Jacobson (2001) p.64]
                %{I%} -> i || FullVowel "^" _ .o.
                %{I%} -> e || m "^" _         .o. ! for obsolete verb root -ete [Jacobson (2001) p.78]
                %{I%} -> i || n "^" _         .o.
                %{I%} -> 0                    ;


define OptativeAllomorphs %{GI%} -> g i || FullVowel ("^") FullVowel "^" _ .o. ! -a, -i, -u vs. -aa, -ii, -uu [Jacobson (2001) p.65]
                          %{AI%} -> i   ||                       g h "^" _ .o. ! -agh, -igh, -ugh vs. -aagh, -iigh, -uugh [Jacobson (2001) p.65]
                          %{AI%} -> a   ||                 FullVowel "^" _ .o.
                          %{GI%} -> 0                                      ;

define SFGKeKa e -> a || "^" ( %{%.at%.%} | %{%.sf%.%} | %{%.m%.%} | g ) [ k | q ] _ "^" n g ; ! @~sfâ€“(g)ke/ka [Jacobson (2001) p.72]


!------------------
! MODIFY -TE RULES
!------------------

define SpecialTE %{t%} e "*" -> l || _ "^" %{%.at%.%} ;


define UnmarkSpecialTE "*" -> 0 ;


define ISuffixTE e -> 0 || %{t%} _ "^" %{%.at%.%} i .o.
             %{t%} -> s ||       _ "^" %{%.at%.%} i ;


define LabialTE e   -> 0     || V %{t%} _ "^" %{%.at%.%} [ m | v ]  .o. ! labial -m and -v 
                n   -> n n   ||         _ %{t%} e "^" %{%.at%.%} m  .o. !   deletes -e if -Vte
                l   -> l l   ||         _ %{t%} e "^" %{%.at%.%} m  .o. !   deletes -te if -Cte
                g h -> g h h ||         _ %{t%} e "^" %{%.at%.%} m  .o. !   and the resulting
				  v -> f     ||         C %{t%} e "^" %{%.at%.%} _  .o. !   consonant cluster devoices
            %{t%} e -> 0     ||       C _         "^" %{%.at%.%} m  ;   ! [Jacobson (2001) p.177]


define ApicalTE y   -> s,
                n   -> n n     || %{t%} e "^" %{%.at%.%} _                 .o. ! [Jacobson (2001) p.177]
                g   -> g g                                                 ,   ! apical -n [Jacobson (2001) p.31]
                l   -> l l                                                 ,   !   the only consonants before -te that double
                g h -> g h h   || _ %{t%} e "^" %{%.at%.%} n               .o. !   to show voicelessness are -g, -l, -gh
                l   -> l l     || %{t%} e "^" %{%.at%.%} _ [ V | C - l ]   .o. ! apical -l [Jacobson (2001) p.70]
                g h -> e g h h || C %{t%} e "^" %{%.at%.%} l l _           ;   ! for suffix @â€“lghii


define VelarTE  e -> 0  ||       V %{t%} _ "^" %{%.at%.%} k .o. ! [Jacobson (2001) p.177]
            %{t%} -> t,
            %{t%} -> s  ||             V _ "^" %{%.at%.%} k .o. ! e.g. tuqutkuvgu, tuquskuvgu
       %{%.at%.%} -> 0  || C %{t%} e "^" _ k                ;   ! e.g. qelpeghtekuvgu


define DropTE %{t%} e -> 0 || _ "^" %{%.at%.%} .o.
           %{%.at%.%} -> 0                     ;


!----------------
! CLEAN-UP RULES
!----------------

define MatchVoicing y -> s ||            _ [ k | q | g h h ] .o. ! [Jacobson (2001) p.66] e.g. paasghu
                    y -> s ||  [ k | q ] _                   .o.
                    k -> q ||        g h _                   .o.
                    z -> s || Stop ("^") _                   .o. ! [Jacobson (2001) p.51] e.g. qiyaaqsin
                    v -> f || _ ("^") Stop                   .o. ! [Jacobson (2001) p.58] e.g. kuufkaq
					v -> f || [ k | t ] _                    ;


define BaseFinalEndings %{t%} e -> n   ||               V _     "^" .#. , 
                        %{t%} e -> t a                                  .o.
                              e -> a   ||                 _     "^" .#. .o.
                              w -> k w || [C - h | %{k%}] _     "^" .#. .o.
                            g h -> q   ||                 _ (w) "^" .#. .o.
                        %{g%} h -> q   ||                 _     "^" .#. .o.
                              g -> k   ||                 _     "^" .#. .o.
          [ %{t%} | t ] ("^") z -> s                                    ; ! [Jacobson (2001) p.51] e.g. ~f(t)zin


define PreventGemination n -> 0 || _ "^" n ; ! is this the only instance of accidental gemination? [Jacobson (2001) p.31]


define CleanupDigraph %{k%}   -> 0   .o.
                      %{g%} h -> g h .o.
                      %{t%}   -> t   ;


define CleanupMorphBoundary "^" -> 0 ;


define Undoubling l l -> l, r r -> r, g g -> g, g h h -> g h, g h h w -> g h w || _ [ Stop | f |  s]                      .o.
                  l l -> l, r r -> r, g g -> g, g h h -> g h, g h h w -> g h w || [ Stop | f | s | [C - g - w] h ] _ .o.
                  l l -> l, r r -> r, g g -> g, g h h -> g h, g h h w -> g h w || _ l l                                   .o.
                  l l -> l, r r -> r, g g -> g, g h h -> g h, g h h w -> g h w || [ l l | r r | g g | g h h | g h h w ] _ .o.
                  m m -> m, n n -> n, n g n g -> n g, n g n g w -> n g w       || [ Stop | f | s | [C - g - w] h ] _      .o.
                  m m -> m, n n -> n, n g n g -> n g, n g n g w -> n g w       || [ l l | r r | g g | g h h | g h h w ] _ ;


!==============
! RULE CASCADE
!==============

define Rules [
    !-------------------------------
    ! modify -te rules
    !-------------------------------
    SpecialTE            .o.
    UnmarkSpecialTE      .o.
    ISuffixTE            .o.
	LabialTE             .o.
    ApicalTE             .o.
    VelarTE              .o.
    DropTE               .o.
    !-------------------------------
    ! -e dropping and hopping rules
    !-------------------------------
    SemiFinalE           .o.
    ShortRootFinalE      .o.
    LongRootFinalE       .o.
    FinalE               .o.
    !-------------------------------
    ! consonant-related rules
    !-------------------------------
    DropFinalC           .o.
    DropWeakC            .o.
    DropUvular           .o.
    !-------------------------------
    ! allomorphy rules
    !-------------------------------
    AddE                 .o.
    DeleteEBeforeVowel   .o.
    ResolveG             .o.
    ResolveI             .o.
    OptativeAllomorphs   .o.
    SFGKeKa              .o.
    !-------------------------------
    ! clean up
    !-------------------------------
    BaseFinalEndings     .o.
    PreventGemination    .o.
    CleanupDigraph       .o.
    CleanupMorphBoundary .o.
    VelarUvularRounding  .o.
    DropMiddleVowel      .o.
    VowelDominance       .o.
    MatchVoicing         .o.
    Undoubling
];

define Grammar [ [ Exceptions .o. Rules ] .P. [ Lexicon .o. Lowercase .o. Rules ] ] ;
